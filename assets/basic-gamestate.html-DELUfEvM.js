import{_ as d,c as e,a,o as r}from"./app-BNdnfgRb.js";const n={};function o(s,t){return r(),e("div",null,t[0]||(t[0]=[a('<h1 id="package-name" tabindex="-1"><a class="header-anchor" href="#package-name"><span>Package Name</span></a></h1><ul><li><code>gamestate</code></li></ul><h1 id="import" tabindex="-1"><a class="header-anchor" href="#import"><span>Import</span></a></h1><ul><li><code>import &quot;github.com/moxcomic/Archer/gamestate&quot;</code></li></ul><h1 id="constants" tabindex="-1"><a class="header-anchor" href="#constants"><span>Constants</span></a></h1><table><thead><tr><th>Name</th><th>Type</th><th>Value</th><th>Notes</th></tr></thead><tbody><tr><td>RoundEndReasonHule</td><td>int</td><td>0</td><td></td></tr><tr><td>RoundEndReasonRyuukyoku</td><td>int</td><td>1</td><td></td></tr></tbody></table><h1 id="roundend" tabindex="-1"><a class="header-anchor" href="#roundend"><span>RoundEnd</span></a></h1><table><thead><tr><th>Name</th><th>Type</th><th>Notes</th></tr></thead><tbody><tr><td>Reason</td><td>int</td><td>Reason for round end</td></tr><tr><td>Deltas</td><td>[]int</td><td>Score changes for players</td></tr><tr><td>Hules</td><td>[]*Hules</td><td></td></tr></tbody></table><h1 id="hules" tabindex="-1"><a class="header-anchor" href="#hules"><span>Hules</span></a></h1><table><thead><tr><th>Name</th><th>Type</th><th>Notes</th></tr></thead><tbody><tr><td>Seat</td><td>int</td><td>Seat number</td></tr><tr><td>Tsumo</td><td>bool</td><td>Tsumo (self-draw win)</td></tr><tr><td>Point</td><td>int</td><td>Points earned</td></tr></tbody></table><h1 id="interface-methods" tabindex="-1"><a class="header-anchor" href="#interface-methods"><span>Interface Methods</span></a></h1><table><thead><tr><th>Name</th><th>Parameters</th><th>Return Value</th><th>Notes</th></tr></thead><tbody><tr><td>Inst</td><td>None</td><td>*gamestate.GameState</td><td>GameState interface instance</td></tr></tbody></table><h1 id="instance-methods" tabindex="-1"><a class="header-anchor" href="#instance-methods"><span>Instance Methods</span></a></h1><table><thead><tr><th>Name</th><th>Parameters</th><th>Return Value</th><th>Notes</th></tr></thead><tbody><tr><td>IsOnChiPon</td><td>None</td><td>bool</td><td>Whether it&#39;s in Chii, Pon, or Kan phase</td></tr><tr><td>IsOnBabei</td><td>None</td><td>bool</td><td>Whether it&#39;s in Babei phase</td></tr><tr><td>IsRoundWind</td><td>None</td><td>bool</td><td>Whether it&#39;s the current round&#39;s wind</td></tr><tr><td>IsSelfWind</td><td>None</td><td>bool</td><td>Whether it&#39;s the player&#39;s own wind</td></tr><tr><td>IsCanWin</td><td>None</td><td>bool</td><td>Whether the player can win</td></tr><tr><td>IsLiqi3</td><td>None</td><td>bool</td><td>Whether it is a three-player mahjong</td></tr><tr><td>Chang</td><td>None</td><td>int</td><td>Current round: 0=East, 1=South, 2=West</td></tr><tr><td>Ben</td><td>None</td><td>int</td><td>Current round number</td></tr><tr><td>Ju</td><td>None</td><td>int</td><td>Current hand number</td></tr><tr><td>Oya</td><td>None</td><td>int</td><td>Seat number of the dealer</td></tr><tr><td>Score</td><td>None</td><td>[]int</td><td>Player scores</td></tr><tr><td>DiscardTile</td><td>None</td><td>[][]string</td><td>Tiles in each player&#39;s discard pile</td></tr><tr><td>Riichi</td><td>None</td><td>[]bool</td><td>Riichi status of each player</td></tr><tr><td>IsCan</td><td>int</td><td>bool</td><td>Whether action (x) can be performed</td></tr><tr><td>IsCanOperations</td><td>None</td><td>bool</td><td>Whether any actions can be performed</td></tr><tr><td>IsOperation</td><td>uint32</td><td>bool</td><td>Deprecated</td></tr><tr><td>SetUserUseMouse</td><td>bool</td><td>None</td><td>Set whether the user is using the mouse</td></tr><tr><td>HandTile</td><td>None</td><td>[]string</td><td>Player&#39;s hand tiles</td></tr><tr><td>OperationCombination</td><td>uint32</td><td>[]string</td><td>Get combination for operation</td></tr><tr><td>LeftTileCount</td><td>None</td><td>int</td><td>Remaining tile count</td></tr><tr><td>CanIppatsu</td><td>None</td><td>[]bool</td><td>Whether each player can perform Ippatsu</td></tr><tr><td>GlobalLeftTile</td><td>None</td><td>[]string</td><td>Global discard pool</td></tr><tr><td>RiichiAt</td><td>None</td><td>[]int</td><td>Position of Riichi in global discard pool, -1 if not declared</td></tr><tr><td>Level</td><td>None</td><td>string</td><td>Player level</td></tr><tr><td>LevelScore</td><td>None</td><td>uint32</td><td>Player level score</td></tr><tr><td>IsInSyncGame</td><td>None</td><td>bool</td><td>Whether this game is a reconnection game</td></tr><tr><td>Melds</td><td>None</td><td>[][][]string</td><td>Melds of each player</td></tr><tr><td>RoundEnd</td><td>None</td><td>*RoundEnd</td><td>Information on round end</td></tr></tbody></table>',14)]))}const i=d(n,[["render",o],["__file","basic-gamestate.html.vue"]]),l=JSON.parse('{"path":"/en/auto/majsoul/gamestate/basic-gamestate.html","title":"Basic","lang":"en-US","frontmatter":{"title":"Basic"},"headers":[],"git":{},"filePathRelative":"en/auto/majsoul/gamestate/basic-gamestate.md"}');export{i as comp,l as data};
